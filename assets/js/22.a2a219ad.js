(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{626:function(_,v,t){"use strict";t.r(v);var a=t(20),r=Object(a.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"js高级-正则表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js高级-正则表达式"}},[_._v("#")]),_._v(" js高级-正则表达式")]),_._v(" "),t("h2",{attrs:{id:"核心知识点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心知识点"}},[_._v("#")]),_._v(" 核心知识点")]),_._v(" "),t("ul",[t("li",[_._v("正则的表达式的特殊符号")]),_._v(" "),t("li",[_._v("js操作正则")])]),_._v(" "),t("h2",{attrs:{id:"一-什么是正则表达式【了解】"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-什么是正则表达式【了解】"}},[_._v("#")]),_._v(" 一. 什么是正则表达式【了解】")]),_._v(" "),t("p",[_._v("​\t正则表达式Regular Expression：正则表达式是对"),t("strong",[_._v("字符串操作")]),_._v("的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“"),t("strong",[_._v("规则字符串")]),_._v("”，这个“"),t("strong",[_._v("规则字符串")]),_._v("”用来表达对字符串的一种过滤逻辑。")]),_._v(" "),t("p",[_._v("​\t正则表达式在其他语言中也广泛应用。")]),_._v(" "),t("blockquote",[t("p",[_._v("正则表达式，就是定义好一个"),t("strong",[_._v("字符串规则")]),_._v(" ，然后根据规则实现对象字符串的匹配、提取、替换等")])]),_._v(" "),t("h2",{attrs:{id:"二-正则表达式的作用【了解】"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-正则表达式的作用【了解】"}},[_._v("#")]),_._v(" 二. 正则表达式的作用【了解】")]),_._v(" "),t("ol",[t("li",[_._v("给定的字符串是否符合正则表达式的过滤逻辑("),t("strong",[_._v("匹配")]),_._v(")")]),_._v(" "),t("li",[_._v("可以通过正则表达式，从字符串中获取我们想要的特定部分("),t("strong",[_._v("提取")]),_._v(")")]),_._v(" "),t("li",[_._v("强大的字符串替换能力("),t("strong",[_._v("替换")]),_._v(")")])]),_._v(" "),t("h2",{attrs:{id:"三-正则表达式的特点【了解】"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-正则表达式的特点【了解】"}},[_._v("#")]),_._v(" 三.正则表达式的特点【了解】")]),_._v(" "),t("ol",[t("li",[_._v("灵活性、逻辑性和功能性非常的强")]),_._v(" "),t("li",[_._v("可以迅速地用极简单的方式达到字符串的复杂控制")])]),_._v(" "),t("h2",{attrs:{id:"四-正则表达式语法-【重要】"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四-正则表达式语法-【重要】"}},[_._v("#")]),_._v(" 四. 正则表达式语法 【重要】")]),_._v(" "),t("p",[t("a",{attrs:{href:"http://tool.oschina.net/regex/",target:"_blank",rel:"noopener noreferrer"}},[_._v("在线测试正则"),t("OutboundLink")],1)]),_._v(" "),t("h3",{attrs:{id:"_4-1-正则表达式的组成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-正则表达式的组成"}},[_._v("#")]),_._v(" 4.1 正则表达式的组成")]),_._v(" "),t("ul",[t("li",[_._v("普通字符abc  123  我爱你")]),_._v(" "),t("li",[_._v("特殊字符(元字符、限定符、中括号)：正则表达式中有特殊意义的字符")])]),_._v(" "),t("h3",{attrs:{id:"_4-2-元字符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-元字符"}},[_._v("#")]),_._v(" 4.2 元字符")]),_._v(" "),t("p",[_._v("​\t元字符就是，在正则表达式中具有特殊含义的字符。")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[_._v("元字符")])]),_._v(" "),t("th",[t("strong",[_._v("说明")])])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("\\d")]),_._v(" "),t("td",[_._v("匹配数字")])]),_._v(" "),t("tr",[t("td",[_._v("\\D")]),_._v(" "),t("td",[_._v("匹配非数字")])]),_._v(" "),t("tr",[t("td",[_._v("\\w")]),_._v(" "),t("td",[_._v("匹配字母或数字或下划线_")])]),_._v(" "),t("tr",[t("td",[_._v("\\W")]),_._v(" "),t("td",[_._v("匹配非字母、数字、下划线_")])]),_._v(" "),t("tr",[t("td",[_._v("\\s")]),_._v(" "),t("td",[_._v("匹配空白符（空格）")])]),_._v(" "),t("tr",[t("td",[_._v("\\S")]),_._v(" "),t("td",[_._v("匹配非空白符")])]),_._v(" "),t("tr",[t("td",[_._v(".")]),_._v(" "),t("td",[_._v("匹配任意除了换行符之外的单个字符")])])])]),_._v(" "),t("h3",{attrs:{id:"_4-3-限定符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-限定符"}},[_._v("#")]),_._v(" 4.3 限定符")]),_._v(" "),t("p",[_._v("控制字符出现的个数。")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[_._v("限定符")])]),_._v(" "),t("th",[t("strong",[_._v("说明")])])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("n*")]),_._v(" "),t("td",[_._v("匹配任何包含零个或多个 n 的字符串。n{0,}")])]),_._v(" "),t("tr",[t("td",[t("strong",[_._v("n+")])]),_._v(" "),t("td",[_._v("匹配任何包含至少一个 n 的字符串。{1,}")])]),_._v(" "),t("tr",[t("td",[_._v("n?")]),_._v(" "),t("td",[_._v("匹配任何包含零个或一个 n 的字符串。{0,1}")])]),_._v(" "),t("tr",[t("td",[t("strong",[_._v("n{x}")])]),_._v(" "),t("td",[_._v("匹配包含 x 个 n 的序列的字符串")])]),_._v(" "),t("tr",[t("td",[t("strong",[_._v("n{x,}")])]),_._v(" "),t("td",[_._v("匹配包含至少 x 个 n 的序列的字符串。")])]),_._v(" "),t("tr",[t("td",[t("strong",[_._v("n{x,y}")])]),_._v(" "),t("td",[_._v("匹配包含 至少x个 至多 y 个 n 的序列的字符串。")])]),_._v(" "),t("tr",[t("td",[_._v("n$")]),_._v(" "),t("td",[_._v("匹配任何结尾为 n 的字符串")])]),_._v(" "),t("tr",[t("td",[_._v("^n")]),_._v(" "),t("td",[_._v("匹配任何开头为 n 的字符串")])])])]),_._v(" "),t("blockquote",[t("p",[_._v("注意："),t("strong",[_._v("^正则表达式$")]),_._v("  使用时，会对字符串整体校验，完全符合才能够匹配。否则，不匹配。")]),_._v(" "),t("p",[_._v("注意：在使用花括号限制字符个数时，将来在去匹配时，首先从前向后匹配，先按照至多的要求匹配，至多不满足时，再降低要求匹配，若将至最少时还不匹配→ 最终是不匹配。")]),_._v(" "),t("p",[_._v("注意：关于次数至少是0时，表示的有没有都符合。  没有符合，内容不是也符合")])]),_._v(" "),t("h3",{attrs:{id:"_4-4-中括号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-中括号"}},[_._v("#")]),_._v(" 4.4 中括号")]),_._v(" "),t("p",[_._v("一个中括号就代表一个字符，中括号的目的就是控制了一个字符的==范围==。")]),_._v(" "),t("p",[_._v("对象字符种类限制")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[_._v("中括号")]),_._v(" "),t("th",[_._v("说明")])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("[abc]")]),_._v(" "),t("td",[_._v("查找一个方括号之间的任何字符。")])]),_._v(" "),t("tr",[t("td",[_._v("[ ^abc]")]),_._v(" "),t("td",[_._v("查找一个任何不在方括号之间的字符。^在中括号中有取反的意思")])]),_._v(" "),t("tr",[t("td",[_._v("[0-9]")]),_._v(" "),t("td",[_._v("查找一个任何从 0 至 9 的数字。")])]),_._v(" "),t("tr",[t("td",[_._v("[a-z]")]),_._v(" "),t("td",[_._v("查找一个任何从小写 a 到小写 z 的字符。")])]),_._v(" "),t("tr",[t("td",[_._v("[A-Z]")]),_._v(" "),t("td",[_._v("查找一个任何从大写 A 到大写 Z 的字符。")])]),_._v(" "),t("tr",[t("td",[_._v("[A-z]")]),_._v(" "),t("td",[_._v("查找一个字母（包含大小写和下划线）")])]),_._v(" "),t("tr",[t("td",[_._v("[\\u4e00-\\u9fa5]")]),_._v(" "),t("td",[_._v("查找一个汉字")])])])]),_._v(" "),t("p",[_._v("​\t在匹配时，从前向后按照【规则】去找，若是全局匹配，前面若有满足项时，后面再匹配时，从满足项下一个开始匹配。")]),_._v(" "),t("h3",{attrs:{id:"_4-5-或模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-或模式"}},[_._v("#")]),_._v(" 4.5 或模式")]),_._v(" "),t("p",[_._v("特殊符号："),t("strong",[_._v("正则1|正则2")]),_._v(", 或者。 符合或两边其中一个就可以匹配。")]),_._v(" "),t("p",[_._v("如：google，baidu，bing;  // 匹配三种其中一种字符串")]),_._v(" "),t("p",[_._v("正则：google|baidu|bing")]),_._v(" "),t("h3",{attrs:{id:"_4-6-分组模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-分组模式"}},[_._v("#")]),_._v(" 4.6 分组模式")]),_._v(" "),t("p",[_._v("特殊符号："),t("strong",[_._v("(正则)")]),_._v(";")]),_._v(" "),t("p",[_._v("组指的是一个小集体，分组就是将一个大集体可以分成几个小集体。")]),_._v(" "),t("p",[_._v("如：控制你的名字连续出现的次数，最少1次，最多3次")]),_._v(" "),t("p",[_._v("正则：^(bruce){1,3}$")]),_._v(" "),t("h3",{attrs:{id:"_4-7-修饰符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-修饰符"}},[_._v("#")]),_._v(" 4.7 修饰符")]),_._v(" "),t("p",[_._v("→ "),t("strong",[_._v("g")]),_._v("\ng，全称global，有 全局 的意思，表示全局匹配。\n如： var reg = /hello/g;\n→ "),t("strong",[_._v("i")]),_._v("\ni，全称ignore，有 忽视、忽略 的意思，表示匹配字母时，可以忽略字母的大小写。\n​\t如： var reg = /hello/i;")]),_._v(" "),t("p",[_._v("→ "),t("strong",[_._v("gi")]),_._v("    ig\ngi，全局匹配和忽略大小写一起使用。\n如： var reg = /hello/gi;")]),_._v(" "),t("h3",{attrs:{id:"_4-8-正则转义符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-正则转义符"}},[_._v("#")]),_._v(" 4.8 正则转义符")]),_._v(" "),t("p",[_._v(".在正则中表示特殊符号。去除.的特殊意义，需要转义：  "),t("code",[_._v("\\.")])]),_._v(" "),t("h3",{attrs:{id:"课堂一练"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#课堂一练"}},[_._v("#")]),_._v(" 课堂一练")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("验证邮箱")]),_._v(" "),t("blockquote",[t("p",[t("code",[_._v("^\\w+@\\w+\\.\\w+$")])]),_._v(" "),t("p",[t("code",[_._v("^\\w+@\\w+\\.[a-z]{2,3}$")])]),_._v(" "),t("p",[t("code",[_._v("^\\d{5,11}@qq\\.com$")])]),_._v(" "),t("p",[t("code",[_._v("^\\w+@[0-9a-z]{2,12}\\.(com|cn)$")])]),_._v(" "),t("p",[t("code",[_._v("^[1-9]\\d{4,9}@qq\\.com$")])])])]),_._v(" "),t("li",[t("p",[_._v("验证身份证号")]),_._v(" "),t("blockquote",[t("p",[t("code",[_._v("^\\d{17}[\\dX]$")])]),_._v(" "),t("p",[t("code",[_._v("^\\d{17}(\\d|X)$")])])])]),_._v(" "),t("li",[t("p",[_._v("验证手机号")]),_._v(" "),t("blockquote",[t("p",[t("code",[_._v("^\\d{11}$")])])])]),_._v(" "),t("li",[t("p",[_._v("验证日期  2018-12-10")]),_._v(" "),t("blockquote",[t("p",[t("code",[_._v("^\\d{4}-\\d{1,2}-\\d{1,2}$")])])])]),_._v(" "),t("li",[t("p",[_._v("验证IP  XXX.XXX.XXX.XXX")]),_._v(" "),t("blockquote",[t("p",[t("code",[_._v("^\\d{1,3}\\(.\\d{1,3}){3}$")])]),_._v(" "),t("p",[t("code",[_._v("\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}")])])])])]),_._v(" "),t("h2",{attrs:{id:"五-js中使用正则表达式-【重要】"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五-js中使用正则表达式-【重要】"}},[_._v("#")]),_._v(" 五. js中使用正则表达式 【重要】")]),_._v(" "),t("h3",{attrs:{id:"_5-1-正则表达式对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-正则表达式对象"}},[_._v("#")]),_._v(" 5.1 正则表达式对象")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("创建正则表达式对象")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("方式1：")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("语法：\n"),t("strong",[_._v("var 变量 = new RegExp(“规则”,”修饰符”);")])])]),_._v(" "),t("li",[t("p",[_._v("代码：")]),_._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("var")]),_._v(" reg "),t("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("new")]),_._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[_._v("RegExp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[_._v("'\\\\d'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[_._v("'g'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])]),_._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[_._v("1")]),t("br")])])])])]),_._v(" "),t("li",[t("p",[_._v("方式2：字面量或直接量")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("语法：\n"),t("strong",[_._v("var 变量 = /正则表达式/;")])])]),_._v(" "),t("li",[t("p",[_._v("代码：")]),_._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("var")]),_._v(" reg "),t("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[_._v("/\\d/g")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])]),_._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[_._v("1")]),t("br")])])])])])])]),_._v(" "),t("li",[t("p",[_._v("检测匹配")]),_._v(" "),t("ul",[t("li",[_._v("正则对象.=="),t("strong",[_._v("test(字符串)")]),_._v("==  ;  用于检测字符串是否==匹配== 某个规则。返回true和false。 【重点 】")])])])]),_._v(" "),t("h3",{attrs:{id:"_5-2-字符串对象方法相关正则使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-字符串对象方法相关正则使用"}},[_._v("#")]),_._v(" 5.2 字符串对象方法相关正则使用")]),_._v(" "),t("p",[_._v("字符串不是对象，为什么可以点出属性或方法")]),_._v(" "),t("p",[_._v("var str = 'abc'")]),_._v(" "),t("p",[_._v("str.length;    // 点的过程中，自动被包装为对象 new String('abc') ，使用完毕后，对象被释放，包装对象→临时对象")]),_._v(" "),t("ul",[t("li",[t("p",[t("strong",[_._v("字符串.match(正则对象);")]),_._v("   提取所有匹配的内容\n获取匹配正则的子字符串，返回一个数组。")])]),_._v(" "),t("li",[t("p",[_._v("字符串.replace(正则对象,替换后的内容);\n​        替换所匹配正则的子字符串。返回替换后的字符串。")])])])])}),[],!1,null,null,null);v.default=r.exports}}]);